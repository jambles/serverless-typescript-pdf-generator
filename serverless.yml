service: pdfr

frameworkVersion: '>=1.0.0 <2.0.0'

custom:
  defaultStage: 'pre'
  documentation:
    api:
      info:
        version: '1'
        title: Pdfr
        description: Generate Pdfs from various inputs
        termsOfService: https://www.none.com
        contact:
          name: someone
          url: https://www.none.com/contact
          email: api-contact@none.com
        license:
          name: The license
          url: https://www.none.com
    models:
      - name: GeneratePdfRequest
        description: "Object definition for generating a pdf"
        contentType: "application/json"
        schema:
          type: object
          properties:
            fromUrl:
              type: boolean
            urlOptions:
              type: object
              properties:
                method:
                  type: string
                  enum: ['GET', 'POST']
                protocol:
                  type: string
                  enum: ['http:', 'https:']
                host:
                  type: string
                port:
                  type: integer
                  minimum: 1
                  maximum: 65535
                path:
                  type: string
              required:
                - 'host'
          required:
            - 'fromUrl'
#          if:
#            properties:
#              fromUrl: true
#          then:
#            required: urlOptions
      - name: GeneratePdfResponse
        description: "Returns a presigned url of the generated pdf"
        contentType: "application/json"
        schema:
          type: object
          properties:
            pdfUrl:
              type: string
      - name: ErrorResponse
        description: "Generic error response model"
        contentType: "application/json"
        schema:
          type: object
          properties:
            message:
              type: string

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-southeast-2
  environment:
    authoriserArn: ${ssm:/lambda/authentication/${opt:stage}/COGNITO_USER_POOL_ARN}
    ENV: ${self:provider.stage}
    DOMAIN: ${ssm:/lambda/${opt:stage}/DOMAIN}
    pdfS3Bucket: pdfr

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.pdfS3Bucket}-${self:provider.stage}
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
          - AllowedMethods:
            - GET
            - PUT
            - POST
            - HEAD
            AllowedOrigins:
            - "*"
            AllowedHeaders:
            - "*"
    BasePathMapping:
      DependsOn: IamPolicy
      Type: AWS::ApiGateway::BasePathMapping
      Properties:
        BasePath: ${self:service}
        DomainName: ${self:provider.environment.DOMAIN}
        RestApiId:
          Ref: ApiGatewayRestApi
        Stage: ${self:provider.stage}
    BodyRequestValidator:
      Type: "AWS::ApiGateway::RequestValidator"
      Properties:
        Name: 'body-only-req-validator'
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: true
        ValidateRequestParameters: false
    IamPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: sls-${self:service}-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action:
                - "s3:PutObject"
                - "s3:GetObject"
              Resource: 'arn:aws:s3:::${self:provider.environment.pdfS3Bucket}-${self:provider.stage}/*'
            - Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: 'arn:aws:dynamodb:${self:provider.region}:*:*'
        Roles:
          - Ref: IamRoleLambdaExecution

plugins:
  - serverless-webpack
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation

functions:
  createPdf:
    handler: pdf-generator.generatePdf
    events:
     - http:
        path: 'generate/pdf'
        method: post
        cors: true
        reqValidatorName: BodyRequestValidator
        documentation:
          summary: "Creates a pdf"
          description: "Can be created from either a url or a dynamodb source (not yet implemented"
          requestBody:
            description: "Request body description"
          requestModels:
            "application/json": "GeneratePdfRequest"
          methodResponses:
            - statusCode: "200"
              responseModels:
                "application/json": "GeneratePdfResponse"
            - statusCode: "400"
              responseModels:
                "application/json": "ErrorResponse"

